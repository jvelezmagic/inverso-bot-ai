[project]
name = "app"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.12",
    "greenlet>=3.2.1",
    "langchain-groq>=0.3.2",
    "langchain-openai>=0.3.14",
    "langgraph>=0.3.31",
    "langgraph-checkpoint-postgres>=2.0.21",
    "langgraph-cli[inmem]>=0.2.6",
    "psycopg[binary]>=3.2.6",
    "pydantic>=2.11.3",
    "pydantic-ai>=0.1.3",
    "pydantic-settings>=2.9.1",
    "sqlmodel>=0.0.24",
    "tqdm>=4.67.1",
    "trustcall>=0.0.39",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py313"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.hatch.build.targets.wheel]
packages = ["app"]
